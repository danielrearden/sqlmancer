// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PaginateBuilder mysql aggregate avg 1`] = `"select json_object('aggregate', (select json_object('avg', json_object('rentalRate', coalesce(avg(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate avg 2`] = `Array []`;

exports[`PaginateBuilder mysql aggregate count 1`] = `"select json_object('aggregate', (select json_object('count', coalesce(count(\`f1\`.\`film_id\`), 0)) from (select \`f2\`.\`film_id\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate count 2`] = `Array []`;

exports[`PaginateBuilder mysql aggregate limit 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` limit ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate limit 2`] = `
Array [
  10,
]
`;

exports[`PaginateBuilder mysql aggregate max 1`] = `"select json_object('aggregate', (select json_object('max', json_object('title', max(\`f1\`.\`title\`))) from (select \`f2\`.\`title\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate max 2`] = `Array []`;

exports[`PaginateBuilder mysql aggregate mergeWhere 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ? and \`f2\`.\`description\` = ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate mergeWhere 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`PaginateBuilder mysql aggregate min 1`] = `"select json_object('aggregate', (select json_object('min', json_object('title', min(\`f1\`.\`title\`))) from (select \`f2\`.\`title\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate min 2`] = `Array []`;

exports[`PaginateBuilder mysql aggregate multiple functions 1`] = `"select json_object('aggregate', (select json_object('max', json_object('title', max(\`f1\`.\`title\`), 'description', max(\`f1\`.\`description\`)), 'count', coalesce(count(\`f1\`.\`film_id\`), 0), 'avg', json_object('rentalDuration', coalesce(avg(\`f1\`.\`rental_duration\`), 0))) from (select \`f2\`.\`title\`, \`f2\`.\`description\`, \`f2\`.\`film_id\`, \`f2\`.\`rental_duration\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate multiple functions 2`] = `Array []`;

exports[`PaginateBuilder mysql aggregate offset 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` limit 18446744073709551615 offset ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate offset 2`] = `
Array [
  20,
]
`;

exports[`PaginateBuilder mysql aggregate orderBy 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by \`f2\`.\`title\` asc) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate orderBy 2`] = `Array []`;

exports[`PaginateBuilder mysql aggregate sum 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('replacementCost', coalesce(sum(\`f1\`.\`replacement_cost\`), 0))) from (select \`f2\`.\`replacement_cost\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate sum 2`] = `Array []`;

exports[`PaginateBuilder mysql aggregate where 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql aggregate where 2`] = `
Array [
  "FILM",
]
`;

exports[`PaginateBuilder mysql hasMore limit 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` limit ?) as \`f1\`), 'hasMore', (select coalesce(count(\`f3\`.\`film_id\`), 0) > 5 from \`film\` as \`f3\`)) as \`page\`"`;

exports[`PaginateBuilder mysql hasMore limit 2`] = `
Array [
  5,
]
`;

exports[`PaginateBuilder mysql hasMore no limit 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\`) as \`f1\`), 'hasMore', false) as \`page\`"`;

exports[`PaginateBuilder mysql hasMore no limit 2`] = `Array []`;

exports[`PaginateBuilder mysql results limit 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` limit ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results limit 2`] = `
Array [
  10,
]
`;

exports[`PaginateBuilder mysql results load 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('credits', (select if(json_arrayagg(\`c1\`.\`o\`) is null, json_array(), json_arrayagg(\`c1\`.\`o\`)) from (select json_object('id', \`a1\`.\`actor_id\`, 'firstName', \`a1\`.\`first_name\`, 'lastName', \`a1\`.\`last_name\`, 'lastUpdate', \`a1\`.\`last_update\`) as \`o\` from \`actor\` as \`a1\` inner join \`film_actor\` as \`f3\` on \`f3\`.\`actor_id\` = \`a1\`.\`actor_id\` where \`f2\`.\`film_id\` = \`f3\`.\`film_id\`) as \`c1\`)) as \`o\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results load 2`] = `Array []`;

exports[`PaginateBuilder mysql results loadPaginated 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('actors', (select (select json_object('aggregate', (select json_object('count', coalesce(count(\`a2\`.\`actor_id\`), 0)) from (select \`a3\`.\`actor_id\` from \`actor\` as \`a3\` inner join \`film_actor\` as \`f3\` on \`f3\`.\`actor_id\` = \`a3\`.\`actor_id\` where \`f2\`.\`film_id\` = \`f3\`.\`film_id\`) as \`a2\`)) as \`page\`) as \`a1\`)) as \`o\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results loadPaginated 2`] = `Array []`;

exports[`PaginateBuilder mysql results mergeWhere 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ? and \`f2\`.\`description\` = ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results mergeWhere 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`PaginateBuilder mysql results offset 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` limit 18446744073709551615 offset ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results offset 2`] = `
Array [
  20,
]
`;

exports[`PaginateBuilder mysql results orderBy 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` order by \`f2\`.\`title\` asc) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results orderBy 2`] = `Array []`;

exports[`PaginateBuilder mysql results select 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`, 'description', \`f2\`.\`description\`) as \`o\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results select 2`] = `Array []`;

exports[`PaginateBuilder mysql results selectAll 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('id', \`f2\`.\`film_id\`, 'title', \`f2\`.\`title\`, 'description', \`f2\`.\`description\`, 'releaseYear', \`f2\`.\`release_year\`, 'length', \`f2\`.\`length\`, 'rating', \`f2\`.\`rating\`, 'rentalRate', \`f2\`.\`rental_rate\`, 'rentalDuration', \`f2\`.\`rental_duration\`, 'replacementCost', \`f2\`.\`replacement_cost\`, 'extraData', \`f2\`.\`extra_data\`, 'lastUpdate', \`f2\`.\`last_update\`) as \`o\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results selectAll 2`] = `Array []`;

exports[`PaginateBuilder mysql results where 1`] = `"select json_object('results', (select if(json_arrayagg(\`f1\`.\`o\`) is null, json_array(), json_arrayagg(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql results where 2`] = `
Array [
  "FILM",
]
`;

exports[`PaginateBuilder mysql totalCount correct usage 1`] = `"select json_object('totalCount', (select coalesce(\`f1\`.\`count\`, 0) from (select count(\`f2\`.\`film_id\`) as count from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder mysql totalCount correct usage 2`] = `Array []`;

exports[`PaginateBuilder postgres aggregate avg 1`] = `"select json_build_object('aggregate', (select json_build_object('avg', json_build_object('rentalRate', coalesce(avg(\\"f1\\".\\"rental_rate\\"), 0))) from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate avg 2`] = `Array []`;

exports[`PaginateBuilder postgres aggregate count 1`] = `"select json_build_object('aggregate', (select json_build_object('count', coalesce(count(\\"f1\\".\\"film_id\\"), 0)) from (select \\"f2\\".\\"film_id\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate count 2`] = `Array []`;

exports[`PaginateBuilder postgres aggregate limit 1`] = `"select json_build_object('aggregate', (select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" limit ?) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate limit 2`] = `
Array [
  10,
]
`;

exports[`PaginateBuilder postgres aggregate max 1`] = `"select json_build_object('aggregate', (select json_build_object('max', json_build_object('title', max(\\"f1\\".\\"title\\"))) from (select \\"f2\\".\\"title\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate max 2`] = `Array []`;

exports[`PaginateBuilder postgres aggregate mergeWhere 1`] = `"select json_build_object('aggregate', (select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" = ? and \\"f2\\".\\"description\\" = ?) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate mergeWhere 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`PaginateBuilder postgres aggregate min 1`] = `"select json_build_object('aggregate', (select json_build_object('min', json_build_object('title', min(\\"f1\\".\\"title\\"))) from (select \\"f2\\".\\"title\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate min 2`] = `Array []`;

exports[`PaginateBuilder postgres aggregate multiple functions 1`] = `"select json_build_object('aggregate', (select json_build_object('max', json_build_object('title', max(\\"f1\\".\\"title\\"), 'description', max(\\"f1\\".\\"description\\")), 'count', coalesce(count(\\"f1\\".\\"film_id\\"), 0), 'avg', json_build_object('rentalDuration', coalesce(avg(\\"f1\\".\\"rental_duration\\"), 0))) from (select \\"f2\\".\\"title\\", \\"f2\\".\\"description\\", \\"f2\\".\\"film_id\\", \\"f2\\".\\"rental_duration\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate multiple functions 2`] = `Array []`;

exports[`PaginateBuilder postgres aggregate offset 1`] = `"select json_build_object('aggregate', (select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" offset ?) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate offset 2`] = `
Array [
  20,
]
`;

exports[`PaginateBuilder postgres aggregate orderBy 1`] = `"select json_build_object('aggregate', (select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" order by \\"f2\\".\\"title\\" asc) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate orderBy 2`] = `Array []`;

exports[`PaginateBuilder postgres aggregate sum 1`] = `"select json_build_object('aggregate', (select json_build_object('sum', json_build_object('replacementCost', coalesce(sum(\\"f1\\".\\"replacement_cost\\"), 0))) from (select \\"f2\\".\\"replacement_cost\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate sum 2`] = `Array []`;

exports[`PaginateBuilder postgres aggregate where 1`] = `"select json_build_object('aggregate', (select json_build_object('sum', json_build_object('rentalRate', coalesce(sum(\\"f1\\".\\"rental_rate\\"), 0))) from (select \\"f2\\".\\"rental_rate\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" = ?) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres aggregate where 2`] = `
Array [
  "FILM",
]
`;

exports[`PaginateBuilder postgres hasMore limit 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('title', \\"f2\\".\\"title\\") as \\"o\\" from \\"film\\" as \\"f2\\" limit ?) as \\"f1\\"), 'hasMore', (select coalesce(count(\\"f3\\".\\"film_id\\"), 0) > 5 from \\"film\\" as \\"f3\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres hasMore limit 2`] = `
Array [
  5,
]
`;

exports[`PaginateBuilder postgres hasMore no limit 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('title', \\"f2\\".\\"title\\") as \\"o\\" from \\"film\\" as \\"f2\\") as \\"f1\\"), 'hasMore', false) as \\"page\\""`;

exports[`PaginateBuilder postgres hasMore no limit 2`] = `Array []`;

exports[`PaginateBuilder postgres results limit 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('title', \\"f2\\".\\"title\\") as \\"o\\" from \\"film\\" as \\"f2\\" limit ?) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results limit 2`] = `
Array [
  10,
]
`;

exports[`PaginateBuilder postgres results load 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('credits', (select coalesce(nullif(json_agg(\\"c1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('id', \\"a1\\".\\"actor_id\\", 'firstName', \\"a1\\".\\"first_name\\", 'lastName', \\"a1\\".\\"last_name\\", 'lastUpdate', \\"a1\\".\\"last_update\\") as \\"o\\" from \\"actor\\" as \\"a1\\" inner join \\"film_actor\\" as \\"f3\\" on \\"f3\\".\\"actor_id\\" = \\"a1\\".\\"actor_id\\" where \\"f2\\".\\"film_id\\" = \\"f3\\".\\"film_id\\") as \\"c1\\")) as \\"o\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results load 2`] = `Array []`;

exports[`PaginateBuilder postgres results loadPaginated 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('actors', (select (select json_build_object('aggregate', (select json_build_object('count', coalesce(count(\\"a2\\".\\"actor_id\\"), 0)) from (select \\"a3\\".\\"actor_id\\" from \\"actor\\" as \\"a3\\" inner join \\"film_actor\\" as \\"f3\\" on \\"f3\\".\\"actor_id\\" = \\"a3\\".\\"actor_id\\" where \\"f2\\".\\"film_id\\" = \\"f3\\".\\"film_id\\") as \\"a2\\")) as \\"page\\") as \\"a1\\")) as \\"o\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results loadPaginated 2`] = `Array []`;

exports[`PaginateBuilder postgres results mergeWhere 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('title', \\"f2\\".\\"title\\") as \\"o\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" = ? and \\"f2\\".\\"description\\" = ?) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results mergeWhere 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`PaginateBuilder postgres results offset 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('title', \\"f2\\".\\"title\\") as \\"o\\" from \\"film\\" as \\"f2\\" offset ?) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results offset 2`] = `
Array [
  20,
]
`;

exports[`PaginateBuilder postgres results orderBy 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('title', \\"f2\\".\\"title\\") as \\"o\\" from \\"film\\" as \\"f2\\" order by \\"f2\\".\\"title\\" asc) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results orderBy 2`] = `Array []`;

exports[`PaginateBuilder postgres results select 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('title', \\"f2\\".\\"title\\", 'description', \\"f2\\".\\"description\\") as \\"o\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results select 2`] = `Array []`;

exports[`PaginateBuilder postgres results selectAll 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('id', \\"f2\\".\\"film_id\\", 'title', \\"f2\\".\\"title\\", 'description', \\"f2\\".\\"description\\", 'releaseYear', \\"f2\\".\\"release_year\\", 'length', \\"f2\\".\\"length\\", 'rating', \\"f2\\".\\"rating\\", 'rentalRate', \\"f2\\".\\"rental_rate\\", 'rentalDuration', \\"f2\\".\\"rental_duration\\", 'replacementCost', \\"f2\\".\\"replacement_cost\\", 'specialFeatures', \\"f2\\".\\"special_features\\", 'extraData', \\"f2\\".\\"extra_data\\", 'lastUpdate', \\"f2\\".\\"last_update\\") as \\"o\\" from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results selectAll 2`] = `Array []`;

exports[`PaginateBuilder postgres results where 1`] = `"select json_build_object('results', (select coalesce(nullif(json_agg(\\"f1\\".\\"o\\")::text, '[null]'), '[]')::json from (select json_build_object('title', \\"f2\\".\\"title\\") as \\"o\\" from \\"film\\" as \\"f2\\" where \\"f2\\".\\"title\\" = ?) as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres results where 2`] = `
Array [
  "FILM",
]
`;

exports[`PaginateBuilder postgres totalCount correct usage 1`] = `"select json_build_object('totalCount', (select coalesce(\\"f1\\".\\"count\\", 0) from (select count(\\"f2\\".\\"film_id\\") as count from \\"film\\" as \\"f2\\") as \\"f1\\")) as \\"page\\""`;

exports[`PaginateBuilder postgres totalCount correct usage 2`] = `Array []`;

exports[`PaginateBuilder sqlite aggregate avg 1`] = `"select json_object('aggregate', (select json_object('avg', json_object('rentalRate', coalesce(avg(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate avg 2`] = `Array []`;

exports[`PaginateBuilder sqlite aggregate count 1`] = `"select json_object('aggregate', (select json_object('count', coalesce(count(\`f1\`.\`film_id\`), 0)) from (select \`f2\`.\`film_id\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate count 2`] = `Array []`;

exports[`PaginateBuilder sqlite aggregate limit 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` limit ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate limit 2`] = `
Array [
  10,
]
`;

exports[`PaginateBuilder sqlite aggregate max 1`] = `"select json_object('aggregate', (select json_object('max', json_object('title', max(\`f1\`.\`title\`))) from (select \`f2\`.\`title\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate max 2`] = `Array []`;

exports[`PaginateBuilder sqlite aggregate mergeWhere 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ? and \`f2\`.\`description\` = ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate mergeWhere 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`PaginateBuilder sqlite aggregate min 1`] = `"select json_object('aggregate', (select json_object('min', json_object('title', min(\`f1\`.\`title\`))) from (select \`f2\`.\`title\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate min 2`] = `Array []`;

exports[`PaginateBuilder sqlite aggregate multiple functions 1`] = `"select json_object('aggregate', (select json_object('max', json_object('title', max(\`f1\`.\`title\`), 'description', max(\`f1\`.\`description\`)), 'count', coalesce(count(\`f1\`.\`film_id\`), 0), 'avg', json_object('rentalDuration', coalesce(avg(\`f1\`.\`rental_duration\`), 0))) from (select \`f2\`.\`title\`, \`f2\`.\`description\`, \`f2\`.\`film_id\`, \`f2\`.\`rental_duration\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate multiple functions 2`] = `Array []`;

exports[`PaginateBuilder sqlite aggregate offset 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` limit ? offset ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate offset 2`] = `
Array [
  -1,
  20,
]
`;

exports[`PaginateBuilder sqlite aggregate orderBy 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` order by \`f2\`.\`title\` asc) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate orderBy 2`] = `Array []`;

exports[`PaginateBuilder sqlite aggregate sum 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('replacementCost', coalesce(sum(\`f1\`.\`replacement_cost\`), 0))) from (select \`f2\`.\`replacement_cost\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate sum 2`] = `Array []`;

exports[`PaginateBuilder sqlite aggregate where 1`] = `"select json_object('aggregate', (select json_object('sum', json_object('rentalRate', coalesce(sum(\`f1\`.\`rental_rate\`), 0))) from (select \`f2\`.\`rental_rate\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite aggregate where 2`] = `
Array [
  "FILM",
]
`;

exports[`PaginateBuilder sqlite hasMore limit 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` limit ?) as \`f1\`), 'hasMore', (select coalesce(count(\`f3\`.\`film_id\`), 0) > 5 from \`film\` as \`f3\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite hasMore limit 2`] = `
Array [
  5,
]
`;

exports[`PaginateBuilder sqlite hasMore no limit 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\`) as \`f1\`), 'hasMore', false) as \`page\`"`;

exports[`PaginateBuilder sqlite hasMore no limit 2`] = `Array []`;

exports[`PaginateBuilder sqlite results limit 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` limit ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results limit 2`] = `
Array [
  10,
]
`;

exports[`PaginateBuilder sqlite results load 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('credits', (select json_group_array(json(\`c1\`.\`o\`)) from (select json_object('id', \`a1\`.\`actor_id\`, 'firstName', \`a1\`.\`first_name\`, 'lastName', \`a1\`.\`last_name\`, 'lastUpdate', \`a1\`.\`last_update\`) as \`o\` from \`actor\` as \`a1\` inner join \`film_actor\` as \`f3\` on \`f3\`.\`actor_id\` = \`a1\`.\`actor_id\` where \`f2\`.\`film_id\` = \`f3\`.\`film_id\`) as \`c1\`)) as \`o\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results load 2`] = `Array []`;

exports[`PaginateBuilder sqlite results loadPaginated 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('actors', (select (select json_object('aggregate', (select json_object('count', coalesce(count(\`a2\`.\`actor_id\`), 0)) from (select \`a3\`.\`actor_id\` from \`actor\` as \`a3\` inner join \`film_actor\` as \`f3\` on \`f3\`.\`actor_id\` = \`a3\`.\`actor_id\` where \`f2\`.\`film_id\` = \`f3\`.\`film_id\`) as \`a2\`)) as \`page\`) as \`a1\`)) as \`o\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results loadPaginated 2`] = `Array []`;

exports[`PaginateBuilder sqlite results mergeWhere 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ? and \`f2\`.\`description\` = ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results mergeWhere 2`] = `
Array [
  "FILM",
  "description",
]
`;

exports[`PaginateBuilder sqlite results offset 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` limit ? offset ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results offset 2`] = `
Array [
  -1,
  20,
]
`;

exports[`PaginateBuilder sqlite results orderBy 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` order by \`f2\`.\`title\` asc) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results orderBy 2`] = `Array []`;

exports[`PaginateBuilder sqlite results select 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`, 'description', \`f2\`.\`description\`) as \`o\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results select 2`] = `Array []`;

exports[`PaginateBuilder sqlite results selectAll 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('id', \`f2\`.\`film_id\`, 'title', \`f2\`.\`title\`, 'description', \`f2\`.\`description\`, 'releaseYear', \`f2\`.\`release_year\`, 'length', \`f2\`.\`length\`, 'rating', \`f2\`.\`rating\`, 'rentalRate', \`f2\`.\`rental_rate\`, 'rentalDuration', \`f2\`.\`rental_duration\`, 'replacementCost', \`f2\`.\`replacement_cost\`, 'lastUpdate', \`f2\`.\`last_update\`) as \`o\` from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results selectAll 2`] = `Array []`;

exports[`PaginateBuilder sqlite results where 1`] = `"select json_object('results', (select json_group_array(json(\`f1\`.\`o\`)) from (select json_object('title', \`f2\`.\`title\`) as \`o\` from \`film\` as \`f2\` where \`f2\`.\`title\` = ?) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite results where 2`] = `
Array [
  "FILM",
]
`;

exports[`PaginateBuilder sqlite totalCount correct usage 1`] = `"select json_object('totalCount', (select coalesce(\`f1\`.\`count\`, 0) from (select count(\`f2\`.\`film_id\`) as count from \`film\` as \`f2\`) as \`f1\`)) as \`page\`"`;

exports[`PaginateBuilder sqlite totalCount correct usage 2`] = `Array []`;
